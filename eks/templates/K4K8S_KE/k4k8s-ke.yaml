AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy K4K8S with Kong Enterprise into an existing Kubernetes cluster"
Parameters:
  KubeManifestLambdaArn:
    Type: String
  HelmLambdaArn:
    Type: String
  KubeConfigPath:
    Type: String
  KubeConfigKmsContext:
    Type: String
    Default: "EKSQuickStart"
  KubeClusterName:
    Type: String
Resources:
  KubeManifestK4K8S:
    Type: "Custom::KubeManifest"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref KubeManifestLambdaArn
      KubeConfigPath: !Ref KubeConfigPath
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      Manifest:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          namespace: kong
        data:
          ServiceCatalogReleaseName: !Ref K4K8S
          ServiceCatalogKubernetesServiceName: !GetAtt K4K8S.Service0
  K4K8S:
    Type: "Custom::Helm"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref HelmLambdaArn
      KubeConfigPath: !Ref KubeConfigPath
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      RepoUrl: https://charts.konghq.com
      Namespace: kong
      Chart: kong/kong
      Name: kong
      Values:
        env.database: postgres
        image.repository: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition
        image.tag: latest
        image.pullSecrets[0]: kong-enterprise-docker
        admin.enabled: true
        ingressController.enabled: false
        postgresql.enabled: true
        postgresql.postgresqlUsername: kong
        postgresql.postgresqlDatabase: kong
        enterprise.enabled: true
        enterprise.license_secret: kong-enterprise-license
        enterprise.vitals.enabled: false
        enterprise.portal.enabled: false
